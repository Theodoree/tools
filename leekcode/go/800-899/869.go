package _00_899

/*
869. 重新排序得到 2 的幂
给定正整数 N ，我们按任何顺序（包括原始顺序）将数字重新排序，注意其前导数字不能为零。
如果我们可以通过上述方式得到 2 的幂，返回 true；否则，返回 false。
*/
var result = [63][10]byte{
	{0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
	{0, 1, 0, 0, 0, 0, 1, 0, 0, 0},
	{0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 1, 0, 1, 0, 0, 0},
	{0, 1, 1, 0, 0, 0, 0, 0, 1, 0},
	{0, 0, 1, 0, 0, 1, 1, 0, 0, 0},
	{0, 1, 1, 0, 0, 1, 0, 0, 0, 0},
	{1, 1, 1, 0, 1, 0, 0, 0, 0, 0},
	{1, 0, 1, 0, 1, 0, 0, 0, 1, 0},
	{1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
	{0, 1, 1, 0, 0, 0, 0, 0, 1, 1},
	{0, 1, 0, 1, 1, 0, 1, 0, 1, 0},
	{0, 0, 1, 1, 0, 0, 1, 1, 1, 0},
	{0, 0, 0, 1, 0, 2, 2, 0, 0, 0},
	{1, 2, 1, 1, 0, 0, 0, 1, 0, 0},
	{0, 1, 2, 0, 2, 0, 1, 0, 0, 0},
	{0, 0, 2, 0, 1, 1, 0, 0, 2, 0},
	{1, 1, 0, 0, 1, 1, 1, 1, 1, 0},
	{1, 1, 2, 0, 0, 1, 0, 1, 0, 1},
	{1, 1, 0, 1, 3, 0, 0, 0, 0, 1},
	{1, 0, 0, 1, 0, 0, 1, 0, 4, 0},
	{0, 2, 1, 0, 0, 0, 2, 3, 0, 0},
	{0, 0, 1, 3, 2, 2, 0, 0, 0, 0},
	{1, 1, 0, 0, 1, 0, 2, 1, 2, 0},
	{0, 2, 2, 1, 1, 0, 0, 2, 1, 0},
	{0, 0, 1, 1, 2, 2, 2, 0, 1, 0},
	{1, 1, 1, 1, 0, 1, 1, 1, 1, 1},
	{1, 2, 1, 1, 2, 0, 0, 2, 1, 0},
	{0, 1, 1, 1, 3, 0, 1, 1, 2, 0},
	{0, 0, 2, 0, 2, 0, 2, 1, 0, 3},
	{0, 0, 1, 1, 1, 2, 0, 0, 2, 3},
	{0, 3, 0, 0, 1, 0, 1, 2, 2, 2},
	{0, 0, 0, 4, 1, 1, 1, 1, 2, 1},
	{0, 1, 0, 1, 1, 0, 3, 3, 1, 1},
	{0, 1, 1, 3, 2, 1, 0, 2, 1, 1},
	{1, 0, 1, 0, 3, 0, 1, 3, 1, 2},
	{0, 1, 0, 1, 1, 3, 0, 1, 4, 1},
	{1, 3, 1, 0, 0, 1, 2, 3, 0, 2},
	{1, 1, 4, 1, 0, 4, 0, 0, 0, 2},
	{2, 3, 0, 1, 3, 1, 1, 0, 1, 1},
	{3, 0, 3, 1, 0, 0, 1, 1, 2, 2},
	{1, 3, 1, 0, 3, 1, 2, 1, 1, 1},
	{1, 1, 2, 3, 1, 1, 0, 1, 4, 0},
	{1, 1, 0, 1, 3, 0, 3, 4, 1, 0},
	{1, 1, 1, 3, 2, 2, 0, 2, 3, 0},
	{1, 2, 1, 0, 2, 1, 3, 3, 1, 1},
	{0, 2, 3, 2, 2, 2, 1, 0, 0, 3},
	{1, 2, 3, 0, 2, 1, 2, 0, 2, 3},
	{0, 2, 3, 1, 1, 2, 1, 1, 3, 2},
	{2, 0, 1, 2, 2, 2, 2, 2, 0, 3},
	{3, 1, 2, 0, 2, 1, 0, 2, 0, 5},
	{2, 3, 0, 1, 3, 1, 0, 0, 4, 3},
	{2, 1, 1, 2, 0, 0, 3, 2, 3, 3},
	{2, 0, 2, 2, 1, 2, 1, 4, 0, 3},
	{1, 4, 1, 0, 2, 4, 0, 2, 4, 0},
	{1, 4, 2, 2, 2, 1, 1, 3, 2, 0},
	{2, 0, 2, 3, 3, 2, 2, 2, 2, 0},
	{2, 3, 2, 0, 2, 2, 4, 1, 1, 2},
	{3, 1, 3, 4, 1, 2, 1, 0, 1, 3},
	{2, 3, 1, 1, 3, 0, 3, 2, 3, 1},
}

func reorderedPowerOf2(n int) bool {
	arr := [10]byte{}

	for n > 0 {
		arr[n%10]++
		n /= 10
	}

	for i := 0; i < len(result); i++ {
		if arr == result[i] {
			return true
		}
	}

	return false
}
