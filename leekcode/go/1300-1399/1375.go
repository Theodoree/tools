package _300_1399



/*
1375. 二进制字符串前缀一致的次数
给你一个长度为 n 、下标从 1 开始的二进制字符串，所有位最开始都是 0 。我们会按步翻转该二进制字符串的所有位（即，将 0 变为 1）。
给你一个下标从 1 开始的整数数组 flips ，其中 flips[i] 表示对应下标 i 的位将会在第 i 步翻转。
二进制字符串 前缀一致 需满足：在第 i 步之后，在 闭 区间 [1, i] 内的所有位都是 1 ，而其他位都是 0 。
返回二进制字符串在翻转过程中 前缀一致 的次数。

//这题关键是读懂题目含义，
// 让所有开着的灯都变成蓝色的时刻的性质是：此时点亮最远的灯的位置恰巧等于点亮灯的个数。
// 若点亮最远的灯的位置大于此时点亮灯的个数，则意味着在点亮最远的灯的位置之前存在着未点亮的灯。
*/

func numTimesAllBlue(flips []int) int {

	max:= func(i,j int) int {
		if i > j {
			return i
		}
		return j
	}

	m:=0
	var cnt int
	for idx,v:=range flips{
		m = max(m,v)
		if idx+1 == m {
			cnt++
		}
	}
	return cnt





}

